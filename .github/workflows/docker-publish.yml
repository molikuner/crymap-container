name: Publish Docker

on:
  schedule:
    - cron: '26 13 7 * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # check what we should release
      - name: Get Latest Release
        id: crymap
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        with:
          repository: AltSysrq/crymap
          excludes: prerelease, draft
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push=${{ github.event_name != 'pull_request' }} Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.crymap.outputs.release }}-${{ steps.date.outputs.date }}
          platforms: linux/amd64,linux/arm64
          build-args: CRYMAP_VERSION=${{ steps.crymap.outputs.release }}

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Create Release
        if: github.event_name != 'pull_request'
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: ${{ steps.crymap.outputs.release }}-${{ steps.date.outputs.date }}
          tag: ${{ steps.crymap.outputs.release }}-${{ steps.date.outputs.date }}
